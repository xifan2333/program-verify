const r={BASE_URL:"/api/v1",HEADERS:{"Content-Type":"application/json"}},c={AUTH:{LOGIN:"/auth/login"},PRODUCTS:{LIST:"/products",DETAIL:e=>`/products/${e}`,CREATE:"/products",UPDATE:e=>`/products/${e}`,STATS:"/products/stats"},LICENSES:{LIST:"/licenses",DETAIL:e=>`/licenses/${e}`,CREATE:"/licenses",UPDATE:e=>`/licenses/${e}`,VERIFY:"/licenses/verify",STATS:"/licenses/stats"},ANALYTICS:{STATS:"/analytics/stats",REVENUE_TREND:"/analytics/revenue-trend",PRODUCT_ACTIVATION:"/analytics/product-activation"}},s={getAuthHeader:()=>{const e=localStorage.getItem("token");return e?{Authorization:`Bearer ${e}`}:{}},buildUrl:e=>{const t=r.BASE_URL;return t.startsWith("/")?`${t}${e}`:`${t}${e}`},handleResponse:async e=>{const t=await e.json();if(!e.ok)throw new Error(t.message||"请求失败");return t},get:async(e,t)=>{const n=s.buildUrl(e),a=t?`${n}?${new URLSearchParams(t).toString()}`:n,o=await fetch(a,{headers:{...r.HEADERS,...s.getAuthHeader()}});return s.handleResponse(o)},post:async(e,t)=>{const n=await fetch(s.buildUrl(e),{method:"POST",headers:{...r.HEADERS,...s.getAuthHeader()},body:t?JSON.stringify(t):void 0});return s.handleResponse(n)},put:async(e,t)=>{const n=await fetch(s.buildUrl(e),{method:"PUT",headers:{...r.HEADERS,...s.getAuthHeader()},body:t?JSON.stringify(t):void 0});return s.handleResponse(n)},delete:async e=>{const t=await fetch(s.buildUrl(e),{method:"DELETE",headers:{...r.HEADERS,...s.getAuthHeader()}});return s.handleResponse(t)}};export{c as A,s as a};
